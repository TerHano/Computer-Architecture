Input format:
This program takes a file name as an argument from the command line. The file is either blank or contains successive lines of input. Each line starts with a character, either 'i’ or ’s’, followed by a tab and then an integer. For each line that starts with ’i’, your program should insert that number in the binary search tree if it is not already there. If it is already present, you will print ”duplicate” and not change the tree. If the line starts with a ’s’, your program should search for the value.
Output format:
For each line in the input file, your program should print the status/result of the operation. For
an insert operation, the program should print either“inserted” with a single space followed by a number, the height of the inserted node in the tree, or ”duplicate” if the value is already present in the tree. The height of the root node is 1. For a search, the program should either print ‘’present”, followed by the height of the node, or “absent” based on the outcome of the search. Your program should print “error” (and nothing else) if the file does not exist or for input lines with improper structure.
Example Execution:
Lets assume we have a file file1.txt with the following contents: i5
i3
i4
i1 i6 s1
Executing the program in the following fashion should produce the output shown below: $./eighth file1.txt
inserted 1
inserted 2
inserted 3 inserted 3 inserted 2 present 3
